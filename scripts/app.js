const $ = sel => document.querySelector(sel); const $$ = sel => Array.from(document.querySelectorAll(sel)); function toggleSwitch(el){ el.dataset.on = el.dataset.on==="1"?"0":"1"; } $$(".switch").forEach(sw => sw.addEventListener("click", ()=> toggleSwitch(sw))); function updateBrandPreview(){ const a = $("#brand_primary").value; const b = $("#brand_secondary").value; $("#brand_preview").style.background = `linear-gradient(135deg, ${a}, ${b})`; $("#brand_preview").style.color = "#fff"; } $("#brand_primary").addEventListener("input", updateBrandPreview); $("#brand_secondary").addEventListener("input", updateBrandPreview); updateBrandPreview(); let priceTemplates = [ {name:"لكل طلب", base:0.450, perKm:0.050, min:0.450}, {name:"شهري/سيارة", base:280.000, perKm:0.000, min:0.000}, ]; let zones = ["العاصمة","حولي","حولي السالمية","بيان","الفروانية","الأحمدي"]; function renderPriceTpls(){ const wrap = $("#priceTpls"); wrap.innerHTML=""; priceTemplates.forEach((t,idx)=>{ const box = document.createElement("div"); box.className="hl"; box.innerHTML = ` <div class="grid g3"> <div><div class="muted">اسم القالب</div><input value="${t.name}" oninput="priceTemplates[${idx}].name=this.value"></div> <div><div class="muted">أساسي</div><input type="number" step="0.001" value="${t.base}" oninput="priceTemplates[${idx}].base=parseFloat(this.value||0)"></div> <div><div class="muted">لكل كم</div><input type="number" step="0.001" value="${t.perKm}" oninput="priceTemplates[${idx}].perKm=parseFloat(this.value||0)"></div> <div><div class="muted">حد أدنى</div><input type="number" step="0.001" value="${t.min}" oninput="priceTemplates[${idx}].min=parseFloat(this.value||0)"></div> <div class="row-end"><button class="btn ghost" onclick="removeTpl(${idx})">حذف</button></div> </div>`; wrap.appendChild(box); }); } function addPriceTemplate(){ priceTemplates.push({name:"قالب جديد", base:0, perKm:0, min:0}); renderPriceTpls(); } function removeTpl(i){ priceTemplates.splice(i,1); renderPriceTpls(); } renderPriceTpls(); function renderZones(){ const wrap = $("#zones"); wrap.innerHTML=""; zones.forEach((z,i)=>{ const el = document.createElement("div"); el.className="chip"; el.innerHTML = `<span>${z}</span> <button class="btn ghost" onclick="removeZone(${i})">حذف</button>`; wrap.appendChild(el); }); } function addZone(){ const z = prompt("اسم المنطقة:"); if(z && z.trim()){ zones.push(z.trim()); renderZones(); } } function removeZone(i){ zones.splice(i,1); renderZones(); } renderZones(); function testNotif(ch){ const enabled = { email: $("#sw_email").dataset.on==="1", whatsapp: $("#sw_wa").dataset.on==="1", sms: $("#sw_sms").dataset.on==="1", }[ch]; alert((enabled?"✅ مفعل: ":"⛔ غير مفعل: ") + ch.toUpperCase() + "\\n" + $("#notif_tpl").value); } function simulateBackup(){ alert("✅ تم إنشاء نسخة احتياطية وهمية إلى: " + ($("#backup_path").value||"local:/var/backups")); } function exportAudit(){ const blob = new Blob([JSON.stringify({exportedAt:new Date().toISOString(), actor:"admin", items:12}, null, 2)], {type:"application/json"}); const url = URL.createObjectURL(blob); const a = document.createElement("a"); a.href = url; a.download = "audit-log.json"; a.click(); setTimeout(()=> URL.revokeObjectURL(url), 2000); } function collectConfig(){ return { company:{ name: $("#c_name").value, email: $("#c_email").value, phone: $("#c_phone").value, address: $("#c_addr").value, tz: $("#c_tz").value, currency: $("#c_curr").value, brand:{primary: $("#brand_primary").value, secondary: $("#brand_secondary").value, logo: $("#brand_logo").value} }, pricing:{ templates: priceTemplates }, zones: zones, notifications:{ email: $("#sw_email").dataset.on==="1", whatsapp: $("#sw_wa").dataset.on==="1", sms: $("#sw_sms").dataset.on==="1", slaDelayMin: parseInt($("#sla_delay").value||"0"), template: $("#notif_tpl").value }, integrations:{ knet: $("#knet_id").value, myFatoorah: $("#mf_key").value, tap: $("#tap_key").value, gmaps: $("#gmaps_key").value, mapbox: $("#mapbox_token").value, webhook: $("#webhook_url").value }, security:{ twoFA: $("#sw_2fa").dataset.on==="1", sessionMinutes: parseInt($("#session_min").value||"60"), encKey: $("#enc_key").value, backupEnabled: $("#sw_backup").dataset.on==="1", backupPath: $("#backup_path").value } }; } function saveAll(){ const cfg = collectConfig(); localStorage.setItem("settings_cfg", JSON.stringify(cfg)); alert("✅ تم حفظ جميع الإعدادات محليًا (localStorage)."); } function exportConfig(){ const cfg = collectConfig(); const blob = new Blob([JSON.stringify(cfg, null, 2)], {type:"application/json"}); const url = URL.createObjectURL(blob); const a = document.createElement("a"); a.href = url; a.download = "settings_export.json"; a.click(); setTimeout(()=> URL.revokeObjectURL(url), 2000); } $("#imp").addEventListener("change", (e)=>{ const file = e.target.files?.[0]; if(!file) return; const reader = new FileReader(); reader.onload = ()=>{ try{ const cfg = JSON.parse(reader.result); applyConfig(cfg); alert("✅ تم الاستيراد. لا تنسَ الحفظ."); }catch(err){ alert("صيغة الملف غير صحيحة."); } }; reader.readAsText(file); }); function applyConfig(cfg){ if(cfg.company){ $("#c_name").value = cfg.company.name||""; $("#c_email").value = cfg.company.email||""; $("#c_phone").value = cfg.company.phone||""; $("#c_addr").value = cfg.company.address||""; $("#c_tz").value = cfg.company.tz||"Asia/Kuwait"; $("#c_curr").value = cfg.company.currency||"KWD"; $("#brand_primary").value = cfg.company.brand?.primary||"#6366f1"; $("#brand_secondary").value = cfg.company.brand?.secondary||"#22c55e"; $("#brand_logo").value = cfg.company.brand?.logo||""; updateBrandPreview(); } if(cfg.pricing?.templates){ priceTemplates = cfg.pricing.templates; renderPriceTpls(); } if(Array.isArray(cfg.zones)){ zones = cfg.zones; renderZones(); } if(cfg.notifications){ $("#sw_email").dataset.on = cfg.notifications.email? "1":"0"; $("#sw_wa").dataset.on = cfg.notifications.whatsapp? "1":"0"; $("#sw_sms").dataset.on = cfg.notifications.sms? "1":"0"; $("#sla_delay").value = cfg.notifications.slaDelayMin||20; $("#notif_tpl").value = cfg.notifications.template||""; } if(cfg.integrations){ $("#knet_id").value = cfg.integrations.knet||""; $("#mf_key").value = cfg.integrations.myFatoorah||""; $("#tap_key").value = cfg.integrations.tap||""; $("#gmaps_key").value = cfg.integrations.gmaps||""; $("#mapbox_token").value = cfg.integrations.mapbox||""; $("#webhook_url").value = cfg.integrations.webhook||""; } if(cfg.security){ $("#sw_2fa").dataset.on = cfg.security.twoFA? "1":"0"; $("#session_min").value = cfg.security.sessionMinutes||60; $("#enc_key").value = cfg.security.encKey||""; $("#sw_backup").dataset.on = cfg.security.backupEnabled? "1":"0"; $("#backup_path").value = cfg.security.backupPath||""; } } function factoryReset(){ if(confirm("هل أنت متأكد من استعادة إعدادات المصنع؟")) { localStorage.removeItem("settings_cfg"); location.reload(); } } function purgeData(){ if(confirm("سيتم مسح جميع البيانات المحلية. متابعة؟")){ localStorage.clear(); alert("تم مسح كل البيانات المحلية."); } } (function init(){ const saved = localStorage.getItem("settings_cfg"); if(saved){ try{ applyConfig(JSON.parse(saved)); }catch{} } })(); let drivers=[ {id:1,name:"عبدالله العتيبي",phone:"5000 1111",vehicle:"bike",status:"available"}, {id:2,name:"محمد يوسف",phone:"5000 2222",vehicle:"car",status:"busy"}, {id:3,name:"سالم المطيري",phone:"5000 3333",vehicle:"bike",status:"available"}, {id:4,name:"فيصل الدوسري",phone:"5000 4444",vehicle:"car",status:"offline"} ]; let orders=[ {id:101,ref:"ORD-101",client:"مطعم مشاوي السالمية",zone:"حولي",status:"onroute",driverId:1,cod:3.750}, {id:102,ref:"ORD-102",client:"سوبرماركت بيان",zone:"بيان",status:"assigned",driverId:2,cod:0}, {id:103,ref:"ORD-103",client:"مطعم بيتزا الشويخ",zone:"العاصمة",status:"created",driverId:null,cod:2.250} ]; let contracts=[ {id:1,client:"مطعم مشاوي السالمية",pricing:"per_order",start:"2025-01-01",end:"2025-12-31",status:"active"}, {id:2,client:"سوبرماركت بيان",pricing:"mixed",start:"2025-03-01",end:"2026-02-28",status:"active"} ]; let vehicles=[ {id:11,code:"V-C-001",type:"car",plate:"20-12345",odometer:45210,maintenanceDueKm:47000}, {id:12,code:"V-B-014",type:"bike",plate:"11-77881",odometer:15200,maintenanceDueKm:18000} ]; let invoices=[ {no:"INV-2025-001",client:"مشاوي السالمية",period:"يوليو 2025",total:320.250,status:"paid"}, {no:"INV-2025-002",client:"سوبرماركت بيان",period:"يوليو 2025",total:810.750,status:"pending"} ]; const toasts=document.getElementById('toasts'), panel=document.getElementById('panel'), notifList=document.getElementById('notifList'), bell=document.getElementById('bell'), dot=document.getElementById('dot'); function notify(msg,type='ok'){ const t=document.createElement('div'); t.className='toast '+(type==='warn'?'warn':type==='err'?'err':'ok'); t.innerHTML=(type==='ok'?'✅':type==='warn'?'⚠️':'⛔')+' '+msg; toasts.appendChild(t); setTimeout(()=>{t.style.opacity='0'; t.style.transform='translateY(-6px)'; setTimeout(()=>t.remove(),300);},3200); const it=document.createElement('div'); it.className='item'; it.innerHTML = `<div class="pill">${new Date().toLocaleTimeString('ar-KW')}</div><div>${msg}</div>`; notifList.prepend(it); dot.style.display='block'; } bell.addEventListener('click', ()=>{ panel.style.display = panel.style.display==='block'?'none':'block'; if(panel.style.display==='block'){ dot.style.display='none'; }}); const OWNER_KEY='techno_owner_pin'; if(!localStorage.getItem(OWNER_KEY)) localStorage.setItem(OWNER_KEY,'2468'); let ownerUnlocked=false; const ownerState=document.getElementById('ownerState'); document.getElementById('btnAdvanced').addEventListener('click', ()=>{ switchView('adv_final'); }); document.getElementById('btnUnlock').addEventListener('click', ()=>{ const pin=prompt('أدخل PIN المالك'); if(pin===null) return; if(pin===localStorage.getItem(OWNER_KEY)){ ownerUnlocked=true; ownerState.textContent='وضع المالك: مفتوح'; notify('تم فتح صلاحيات المالك','ok'); } else notify('PIN غير صحيح','err'); }); function saveAdvanced(){ if(!ownerUnlocked){ notify('وضع المالك مقفل','err'); return; } const cur=document.getElementById('adv_pin_current').value.trim(); const nw =document.getElementById('adv_pin_new').value.trim(); if(cur && nw){ if(cur===localStorage.getItem(OWNER_KEY)){ localStorage.setItem(OWNER_KEY,nw); notify('تم تغيير PIN المالك','ok'); } else notify('PIN الحالي غير صحيح','err'); } } document.querySelectorAll('.item>button').forEach(btn=>{ btn.addEventListener('click',()=>{ const sub=btn.parentElement.querySelector('.sub'); if(sub){ const open=sub.style.display==='block'; sub.style.display=open?'none':'block'; btn.classList.toggle('open',!open); } const v=btn.getAttribute('data-view'); if(v) switchView(v); }); }); document.querySelectorAll('.sub a').forEach(a=> a.addEventListener('click',(e)=>{ e.preventDefault(); const v=a.getAttribute('data-view'); if(v) switchView(v); })); function switchView(v){ document.querySelectorAll('main .card').forEach(sec=> sec.id.startsWith('v_') && (sec.hidden = sec.id!=='v_'+v)); } document.getElementById('q').addEventListener('input',(e)=>{ const q=e.target.value.trim(); document.querySelectorAll('.sidebar .nav .item').forEach(it=>{ const txt = it.innerText || ''; it.style.display = (!q || txt.includes(q)) ? 'block':'none'; }); }); const UI_MODE='ui_mode', UI_COLOR='ui_color', UI_DUO='ui_duo', UI_ICON='ui_iconstyle'; function applyUI(){ const mode=document.getElementById('ui_mode').value; const color=document.getElementById('ui_color').value; const duo=document.getElementById('ui_duo').value; const icon=document.getElementById('ui_iconstyle').value; document.documentElement.setAttribute('data-mode', mode); document.documentElement.setAttribute('data-color', color); document.documentElement.setAttribute('data-duo', duo); document.documentElement.setAttribute('data-iconstyle', icon); renderDonut(); // recolor donut notify('تم تطبيق المظهر','ok'); } function saveUIPreset(){ localStorage.setItem(UI_MODE,ui_mode.value); localStorage.setItem(UI_COLOR,ui_color.value); localStorage.setItem(UI_DUO,ui_duo.value); localStorage.setItem(UI_ICON,ui_iconstyle.value); notify('تم حفظ المظهر الافتراضي','ok'); } (function restoreUI(){ const m=localStorage.getItem(UI_MODE)||'light'; const c=localStorage.getItem(UI_COLOR)||'indigo'; const d=localStorage.getItem(UI_DUO)||'indigo-blue'; const i=localStorage.getItem(UI_ICON)||'layered'; document.documentElement.setAttribute('data-mode',m); document.documentElement.setAttribute('data-color',c); document.documentElement.setAttribute('data-duo',d); document.documentElement.setAttribute('data-iconstyle',i); ui_mode.value=m; ui_color.value=c; ui_duo.value=d; ui_iconstyle.value=i; })(); function kwd(n){ return (Math.round(n*1000)/1000).toFixed(3)+" د.ك"; } function statusChip(s){ const map={created:["info","تم الإنشاء"],assigned:["info","مُسنّد"],picked:["warn","تم الاستلام"],onroute:["info","في الطريق"],delivered:["ok","تم التسليم"],failed:["danger","فشل"]}; const [cls,txt]=map[s]||map.created; return `<span class="status ${cls}">${txt}</span>`; } function driverName(id){const d=drivers.find(x=>x.id===id); return d?d.name:'—';} function renderOrdersTbl(){ const t=document.getElementById('ordersTbl'); t.innerHTML='<thead><tr><th>#</th><th>مرجع</th><th>العميل</th><th>المنطقة</th><th>الحالة</th><th>COD</th><th>السائق</th></tr></thead><tbody></tbody>'; const b=t.querySelector('tbody'); let list=[...orders]; const q=(document.getElementById('f_o_q')?.value||'').toLowerCase(); const st=f_o_status?.value||''; const z=f_o_zone?.value||''; const d=f_o_driver?.value||''; const cmin=parseFloat(f_o_cod_min?.value||''); const cmax=parseFloat(f_o_cod_max?.value||''); list=list.filter(o=>{ if(q && ![o.ref,o.client,o.zone].some(v=> (v||'').toLowerCase().includes(q))) return false; if(st && o.status!==st) return false; if(z && o.zone!==z) return false; if(d && (driverName(o.driverId)!==d)) return false; if(!isNaN(cmin) && (o.cod||0) < cmin) return false; if(!isNaN(cmax) && (o.cod||0) > cmax) return false; return true; }); let i=1; list.forEach(o=>{ const tr=document.createElement('tr'); tr.innerHTML=`<td>${i++}</td><td>${o.ref}</td><td>${o.client}</td><td>${o.zone}</td><td>${statusChip(o.status)}</td><td>${o.cod?kwd(o.cod):'—'}</td><td>${driverName(o.driverId)}</td>`; b.appendChild(tr); }); } ['f_o_q','f_o_status','f_o_zone','f_o_driver','f_o_cod_min','f_o_cod_max'].forEach(id=> document.getElementById(id)?.addEventListener('input', renderOrdersTbl)); function renderContractsTbl(){ const t=document.getElementById('contractsTbl'); t.innerHTML='<thead><tr><th>#</th><th>العميل</th><th>التسعير</th><th>المدة</th><th>الحالة</th></tr></thead><tbody></tbody>'; const b=t.querySelector('tbody'); let i=1; contracts.forEach(c=>{ const pricing=c.pricing=='per_order'?'لكل طلب':c.pricing=='per_km'?'لكل كم':'مختلط'; const cls=c.status=='active'?'ok': c.status=='pending'?'warn':'info'; const tr=document.createElement('tr'); tr.innerHTML=`<td>${i++}</td><td><b>${c.client}</b></td><td>${pricing}</td><td>${c.start} → ${c.end}</td><td><span class="status ${cls}">${c.status=='active'?'ساري':c.status=='pending'?'قيد التوقيع':'منتهي'}</span></td>`; b.appendChild(tr); }); } function renderDriversTbl(){ const t=document.getElementById('driversTbl'); t.innerHTML='<thead><tr><th>#</th><th>الاسم</th><th>الهاتف</th><th>المركبة</th><th>الحالة</th></tr></thead><tbody></tbody>'; const b=t.querySelector('tbody'); let i=1; drivers.forEach(d=>{ const tr=document.createElement('tr'); tr.innerHTML=`<td>${i++}</td><td>${d.name}</td><td>${d.phone}</td><td>${d.vehicle=='car'?'سيارة':'سيكل'}</td><td>${d.status}</td>`; b.appendChild(tr); }); } function renderFleetTbl(){ const t=document.getElementById('fleetTbl'); t.innerHTML='<thead><tr><th>#</th><th>الكود</th><th>النوع</th><th>اللوحة</th><th>العداد</th><th>صيانة عند</th><th>الحالة</th></tr></thead><tbody></tbody>'; const b=t.querySelector('tbody'); let i=1; vehicles.forEach(v=>{ const remaining=v.maintenanceDueKm - v.odometer; const due = remaining<=1500; const status = due? `<span class="status warn">قربت الصيانة (${remaining.toLocaleString('ar-KW')} كم)</span>`: `<span class="status info">طبيعي</span>`; const tr=document.createElement('tr'); tr.innerHTML=`<td>${i++}</td><td>${v.code}</td><td>${v.type=='car'?'سيارة':'سيكل'}</td><td>${v.plate}</td><td>${v.odometer.toLocaleString('ar-KW')}</td><td>${v.maintenanceDueKm.toLocaleString('ar-KW')}</td><td>${status}</td>`; b.appendChild(tr); }); } function renderFinanceTbl(){ const t=document.getElementById('invTbl'); t.innerHTML='<thead><tr><th>#</th><th>العميل</th><th>الفترة</th><th>الإجمالي</th><th>الحالة</th></tr></thead><tbody></tbody>'; const b=t.querySelector('tbody'); let i=1; invoices.forEach(inv=>{ const cls=inv.status=='paid'?'ok':'warn'; const tr=document.createElement('tr'); tr.innerHTML=`<td>${i++}</td><td>${inv.client}</td><td>${inv.period}</td><td>${kwd(inv.total)}</td><td><span class="status ${cls}">${inv.status=='paid'?'مدفوعة':'معلّقة'}</span></td>`; b.appendChild(tr); }); } function renderKPIs(){ const onRoad=orders.filter(o=>['onroute','picked','assigned'].includes(o.status)).length; const delivered=orders.filter(o=>o.status==='delivered').length; const cod=orders.reduce((a,o)=>a+(o.cod||0),0); const available=drivers.filter(d=>d.status==='available').length; document.getElementById('k_onroad').textContent=onRoad; document.getElementById('k_done').textContent=delivered; document.getElementById('k_cod').textContent=kwd(cod); document.getElementById('k_avail').textContent=available; } const donutPalettes={ indigo:["#c7d2fe","#a5b4fc","#818cf8","#6366f1","#4338ca"], blue:["#bfdbfe","#93c5fd","#60a5fa","#3b82f6","#1d4ed8"], emerald:["#d1fae5","#a7f3d0","#6ee7b7","#10b981","#047857"], rose:["#ffe4e6","#fecdd3","#fda4af","#fb7185","#be123c"], amber:["#fde68a","#fcd34d","#fbbf24","#f59e0b","#b45309"], teal:["#ccfbf1","#99f6e4","#5eead4","#14b8a6","#0f766e"] }; function renderDonut(){ const colorKey=document.documentElement.getAttribute('data-color')||'indigo'; const palette = donutPalettes[colorKey]||donutPalettes.indigo; const counts=['created','assigned','picked','onroute','delivered'].map(k=> orders.filter(o=>o.status===k).length); const total=counts.reduce((a,b)=>a+b,0)||1; const g=document.getElementById('donutSlices'); g.innerHTML=''; let acc=0; counts.forEach((c,i)=>{ const val=c/total*100; const circle=document.createElementNS('http://www.w3.org/2000/svg','circle'); circle.setAttribute('cx','21'); circle.setAttribute('cy','21'); circle.setAttribute('r','15.915'); circle.setAttribute('fill','transparent'); circle.setAttribute('stroke', palette[i%palette.length]); circle.setAttribute('stroke-width','6'); circle.setAttribute('stroke-dasharray', '0 100'); circle.setAttribute('stroke-dashoffset', 25-acc); circle.classList.add('slice'); g.appendChild(circle); requestAnimationFrame(()=>{ circle.setAttribute('stroke-dasharray', val+' '+(100-val)); }); acc += val; }); document.getElementById('donutCenter').textContent=total; const leg=document.getElementById('donutLegend'); leg.innerHTML=''; const labels=['تم الإنشاء','مُسنّد','تم الاستلام','في الطريق','تم التسليم']; counts.forEach((c,i)=>{ const row=document.createElement('div'); row.className='row'; row.style='display:flex;align-items:center;gap:8px;margin-top:4px'; row.innerHTML=`<span style="width:12px;height:12px;border-radius:3px;background:${palette[i]}"></span><div>${labels[i]}</div><div class="pill" style="margin-right:auto">${c}</div>`; leg.appendChild(row); }); } function openOrderDlg(){ const sel=document.getElementById('o_driver'); sel.innerHTML='<option value="">بدون سائق</option>'+drivers.filter(d=>d.status!=='offline').map(d=>`<option value="${d.id}">${d.name}</option>`).join(''); document.getElementById('orderDlg').showModal(); } function saveOrder(ev){ ev.preventDefault(); const client=document.getElementById('o_client').value.trim(); if(!client) return; const zone=document.getElementById('o_zone').value; const cod=parseFloat(document.getElementById('o_cod').value||'0'); const driverId=Number(document.getElementById('o_driver').value)||null; const id=Math.max(0,...orders.map(o=>o.id))+1; const ref='ORD-'+id; const status=driverId?'assigned':'created'; orders.unshift({id,ref,client,zone,status,driverId,cod}); document.getElementById('orderDlg').close(); renderAll(); notify('تم إنشاء طلب '+ref,'ok'); } function renderAll(){ renderKPIs(); renderDonut(); renderOrdersTbl(); renderContractsTbl(); renderDriversTbl(); renderFleetTbl(); renderFinanceTbl(); // fill dynamic filters const zSel=document.getElementById('f_o_zone'); const dSel=document.getElementById('f_o_driver'); if(zSel && !zSel.dataset.filled){ const zones=[...new Set(orders.map(o=>o.zone))]; zones.forEach(z=> zSel.innerHTML+=`<option value="${z}">${z}</option>`); zSel.dataset.filled=true; } if(dSel && !dSel.dataset.filled){ const names=[...new Set(drivers.map(d=>d.name))]; names.forEach(n=> dSel.innerHTML+=`<option value="${n}">${n}</option>`); dSel.dataset.filled=true; } } renderAll(); const DEMO_USERS = []; const savedUser = localStorage.getItem('exec_user'); if(savedUser){ try{ const U=JSON.parse(savedUser); window.EXEC_USER=U; document.getElementById('loginOverlay').style.display='none'; }catch{} } document.getElementById('lg_btn').onclick = function(){ const u=document.getElementById('lg_user').value.trim(); const p=document.getElementById('lg_pass').value; const err=document.getElementById('lg_err'); err.style.display='none'; if(!u || !p){ err.textContent='يرجى إدخال اسم المستخدم وكلمة المرور.'; err.style.display='block'; return; } const hit=DEMO_USERS.find(x=>x.u===u && x.p===p); if(!hit){ err.textContent='بيانات الدخول غير صحيحة، حاول مرة أخرى.'; err.style.display='block'; return; } const theme=document.getElementById('lg_theme').value, color=document.getElementById('lg_color').value; document.documentElement.setAttribute('data-mode', theme); document.documentElement.setAttribute('data-color', color); window.EXEC_USER={username:u, role:hit.role}; if(document.getElementById('lg_rem').checked){ localStorage.setItem('exec_user', JSON.stringify(EXEC_USER)); }else{ try{ localStorage.removeItem('exec_user'); }catch{} } document.getElementById('loginOverlay').style.display='none'; notify('مرحبًا '+u+' — تم تسجيل الدخول','ok'); }; function execAutoAssign(){ const avail = drivers.filter(d=>d.status==='available' || d.status==='busy'); if(avail.length===0){ notify('لا يوجد سائقون متاحون','warn'); return; } let i=0, changed=0; orders.forEach(o=>{ if(!o.driverId || o.status==='created'){ o.driverId=avail[i%avail.length].id; o.status = o.status==='created'?'assigned':o.status; i++; changed++; } }); renderAll(); notify('تم إسناد '+changed+' طلبًا تلقائيًا','ok'); } function execCloseDay(){ let delivered=0, cod=0; orders.forEach(o=>{ if(['assigned','picked','onroute'].includes(o.status)){ o.status='delivered'; delivered++; } cod += (o.cod||0); }); renderAll(); notify('إغلاق اليوم — تم تسليم '+delivered+' طلبًا، COD الإجمالي '+kwd(cod),'ok'); } function execMonthInvoices(){ notify('تم تجهيز فواتير الشهر للتصدير (CSV في النسخة الحالية).','ok'); generateReport(); } function renderCSTbl(){ const t=document.getElementById('csTbl'); if(!t) return; t.innerHTML='<thead><tr><th>#</th><th>رقم</th><th>العميل</th><th>المنطقة</th><th>الحالة</th><th>السائق</th><th>COD</th></tr></thead><tbody></tbody>'; const b=t.querySelector('tbody'); let i=1; const q=(document.getElementById('cs_q')?.value||'').toLowerCase(); orders.filter(o=> !q || [o.ref,o.client].some(v=> String(v).toLowerCase().includes(q))).forEach(o=>{ const tr=document.createElement('tr'); tr.innerHTML=`<td>${i++}</td><td>${o.ref}</td><td>${o.client}</td><td>${o.zone}</td><td>${statusChip(o.status)}</td><td>${driverName(o.driverId)}</td><td>${o.cod?kwd(o.cod):'—'}</td>`; b.appendChild(tr); }); } document.getElementById('cs_q')?.addEventListener('input', renderCSTbl); function csApply(){ const act=document.getElementById('cs_action').value; const q=document.getElementById('cs_q').value.trim().toLowerCase(); if(!q || act==='none'){ notify('حدد طلب/إجراء','warn'); return; } const list=orders.filter(o=> [o.ref,o.client].some(v=> String(v).toLowerCase().includes(q))); if(list.length===0){ notify('لا توجد نتائج','warn'); return; } list.forEach(o=>{ if(act==='resched'){ o.status='assigned'; } if(act==='cancel'){ o.status='failed'; } if(act==='fail'){ o.status='failed'; } }); renderAll(); notify('تم تنفيذ الإجراء على '+list.length+' طلب','ok'); } let cashbox = JSON.parse(localStorage.getItem('exec_cashbox')||'[]'); function persistCashbox(){ localStorage.setItem('exec_cashbox', JSON.stringify(cashbox)); } function renderCashbox(){ const t=document.getElementById('cbTbl'); if(!t) return; t.innerHTML='<thead><tr><th>#</th><th>التاريخ</th><th>السائق</th><th>المبلغ</th><th>ملاحظة</th></tr></thead><tbody></tbody>'; const b=t.querySelector('tbody'); const drvSel=document.getElementById('cb_driver'); if(drvSel && !drvSel.dataset.filled){ drvSel.innerHTML='<option value="">السائق: الكل</option>'+drivers.map(d=>`<option>${d.name}</option>`).join(''); drvSel.dataset.filled=true; } const fdrv=drvSel?.value||''; const fdate=document.getElementById('cb_date')?.value||''; let list=[...cashbox]; if(fdrv) list=list.filter(x=>x.driver===fdrv); if(fdate) list=list.filter(x=>x.date===fdate); let i=1; list.forEach(x=>{ const tr=document.createElement('tr'); tr.innerHTML=`<td>${i++}</td><td>${x.date}</td><td>${x.driver}</td><td>${kwd(x.amount)}</td><td>${x.note||''}</td>`; b.appendChild(tr); }); } ['cb_driver','cb_date'].forEach(id=> document.getElementById(id)?.addEventListener('input', renderCashbox)); function cbNew(){ const driver = prompt('اسم السائق؟'); if(!driver) return; const amount = parseFloat(prompt('المبلغ (KWD)؟')||'0'); const note=prompt('ملاحظة (اختياري)')||''; const date = new Date().toISOString().slice(0,10); cashbox.unshift({date,driver,amount,note}); persistCashbox(); renderCashbox(); notify('تم تسجيل استلام COD','ok'); } function cbClose(){ notify('تم ترحيل اليوم — تصدير CSV من التقارير لتسوية العملاء.','ok'); } function renderInvoicesAcc(){ const t=document.getElementById('invTblAcc'); if(!t) return; t.innerHTML='<thead><tr><th>#</th><th>رقم الفاتورة</th><th>العميل</th><th>الفترة</th><th>الإجمالي</th><th>الحالة</th></tr></thead><tbody></tbody>'; const b=t.querySelector('tbody'); let i=1; let list=[...invoices]; const q=(document.getElementById('f_i_q')?.value||'').toLowerCase(); const st=(document.getElementById('f_i_status')?.value||''); const fm=(document.getElementById('f_i_from')?.value||''); const to=(document.getElementById('f_i_to')?.value||''); list=list.filter(inv=>{ if(q && ![inv.no,inv.client,inv.period,inv.status].some(v=> String(v).toLowerCase().includes(q))) return false; if(st && inv.status!==st) return false; return true; }); list.forEach(inv=>{ const cls=inv.status=='paid'?'ok':'warn'; const tr=document.createElement('tr'); tr.innerHTML=`<td>${i++}</td><td>${inv.no}</td><td>${inv.client}</td><td>${inv.period}</td><td>${kwd(inv.total)}</td><td><span class="status ${cls}">${inv.status=='paid'?'مدفوعة':'معلقة'}</span></td>`; b.appendChild(tr); }); } ['f_i_q','f_i_status','f_i_from','f_i_to'].forEach(id=> document.getElementById(id)?.addEventListener('input', renderInvoicesAcc)); function clearInvFilters(){ ['f_i_q','f_i_status','f_i_from','f_i_to'].forEach(id=>{ const el=document.getElementById(id); if(el) el.value=''; }); renderInvoicesAcc(); } function exportInvoicesCSV(){ const rows=[['no','client','period','total','status']]; [...document.querySelectorAll('#invTblAcc tbody tr')].forEach(tr=>{ const tds=[...tr.children].map(td=> td.textContent.trim()); rows.push([tds[1],tds[2],tds[3],tds[4],tds[5]]); }); const csv=rows.map(r=>r.map(x=>`"${String(x).replace(/"/g,'""')}"`).join(',')).join('\n'); const blob=new Blob([csv],{type:'text/csv'}); const url=URL.createObjectURL(blob); const a=document.createElement('a'); a.href=url; a.download='invoices.csv'; a.click(); URL.revokeObjectURL(url); } function generateReport(){ const type=document.getElementById('r_type').value; const t=document.getElementById('repTbl'); t.innerHTML='<thead><tr><th>#</th><th>البند</th><th>القيمة</th></tr></thead><tbody></tbody>'; const b=t.querySelector('tbody'); let rows=[]; if(type==='summary'){ const totalOrders=orders.length; const delivered=orders.filter(o=>o.status==='delivered').length; const cod=orders.reduce((a,o)=>a+(o.cod||0),0); rows=[['إجمالي الطلبات', totalOrders], ['تم التسليم', delivered], ['نسبة التسليم', ((delivered/(totalOrders||1))*100).toFixed(1)+'%'], ['تحصيل COD', kwd(cod)]]; }else if(type==='clients'){ const map={}; orders.forEach(o=>{ map[o.client]=(map[o.client]||0)+1; }); rows=Object.entries(map).map(([client,count])=>[client,count]); }else if(type==='drivers'){ const map={}; orders.forEach(o=>{ const n=driverName(o.driverId); map[n]=(map[n]||0)+1; }); rows=Object.entries(map).map(([d,count])=>[d,count]); } let i=1; rows.forEach(r=>{ const tr=document.createElement('tr'); tr.innerHTML=`<td>${i++}</td><td>${r[0]}</td><td>${r[1]}</td>`; b.appendChild(tr); }); } function exportReportCSV(){ const rows=[['item','value']]; [...document.querySelectorAll('#repTbl tbody tr')].forEach(tr=>{ const tds=[...tr.children].map(td=> td.textContent.trim()); rows.push([tds[1],tds[2]]); }); const csv=rows.map(r=>r.map(x=>`"${String(x).replace(/"/g,'""')}"`).join(',')).join('\n'); const blob=new Blob([csv],{type:'text/csv'}); const url=URL.createObjectURL(blob); const a=document.createElement('a'); a.href=url; a.download='financial_report.csv'; a.click(); URL.revokeObjectURL(url); } const _sv = switchView; switchView = function(v){ _sv(v); if(v==='csdesk') renderCSTbl(); if(v==='acc_cashbox') renderCashbox(); if(v==='acc_invoices') renderInvoicesAcc(); if(v==='acc_reports') generateReport(); }; let fleet = (typeof vehicles!=='undefined' && vehicles.length) ? vehicles.slice() : [ {id:11,code:"V-C-001",type:"car",plate:"20-12345",odometer:45210,maintenanceDueKm:47000}, {id:12,code:"V-B-014",type:"bike",plate:"11-77881",odometer:15200,maintenanceDueKm:18000} ]; let maintLogs = JSON.parse(localStorage.getItem('maint_logs')||'[]'); let fuelLogs = JSON.parse(localStorage.getItem('fuel_logs')||'[]'); let accLogs = JSON.parse(localStorage.getItem('acc_logs')||'[]'); function saveLocal(key, val){ localStorage.setItem(key, JSON.stringify(val)); } function renderFleet(){ const t=document.getElementById('fleetTbl'); if(!t) return; t.innerHTML='<thead><tr><th>#</th><th>الكود</th><th>النوع</th><th>اللوحة</th><th>العداد</th><th>صيانة عند</th><th>حالة الصيانة</th></tr></thead><tbody></tbody>'; const b=t.querySelector('tbody'); const q=(document.getElementById('f_q')?.value||'').toLowerCase(); const kind=(document.getElementById('f_kind')?.value||''); let list=fleet.filter(v=> (!q || [v.code,v.plate].some(s=>String(s).toLowerCase().includes(q))) && (!kind || v.type===kind)); let i=1; list.forEach(v=>{ const remaining = v.maintenanceDueKm - v.odometer; const status = remaining<=1500? `<span class="status warn">قربت الصيانة (${remaining.toLocaleString('ar-KW')} كم)</span>`: `<span class="status info">طبيعي</span>`; const tr=document.createElement('tr'); tr.innerHTML=`<td>${i++}</td><td>${v.code}</td><td>${v.type=='car'?'سيارة':'سيكل'}</td><td>${v.plate}</td><td>${v.odometer.toLocaleString('ar-KW')}</td><td>${v.maintenanceDueKm.toLocaleString('ar-KW')}</td><td>${status}</td>`; b.appendChild(tr); }); } ['f_q','f_kind'].forEach(id=> document.getElementById(id)?.addEventListener('input', renderFleet)); function fleetNew(){ const code=prompt('كود المركبة؟'); if(!code) return; const type=prompt('النوع (car/bike)؟','car'); const plate=prompt('رقم اللوحة؟')||''; const od=Number(prompt('قراءة العداد؟','0')||'0'); const due=Number(prompt('صيانة عند كم؟','10000')||'10000'); const id = Math.max(0,...fleet.map(v=>v.id||0))+1; fleet.push({id,code,type,plate,odometer:od,maintenanceDueKm:due}); renderFleet(); notify('تمت إضافة مركبة','ok'); } function exportFleetCSV(){ const rows=[['code','type','plate','odometer','maintenanceDueKm']]; fleet.forEach(v=> rows.push([v.code,v.type,v.plate,v.odometer,v.maintenanceDueKm])); const csv=rows.map(r=>r.join(',')).join('\n'); const url=URL.createObjectURL(new Blob([csv],{type:'text/csv'})); const a=document.createElement('a'); a.href=url; a.download='fleet.csv'; a.click(); URL.revokeObjectURL(url); } function renderMaint(){ const t=document.getElementById('maint_logsTbl'); if(!t) return; t.innerHTML='<thead><tr><th>#</th><th>المركبة</th><th>النوع</th><th>التاريخ</th><th>عند كم</th><th>التكلفة</th><th>ملاحظة</th></tr></thead><tbody></tbody>'; const b=t.querySelector('tbody'); const q=(document.getElementById('m_q')?.value||'').toLowerCase(); const typ=(document.getElementById('m_type')?.value||''); const nxt=Number(document.getElementById('m_next')?.value||''); let list=maintLogs.filter(x=> (!q || [x.code,x.plate].some(s=> String(s||'').toLowerCase().includes(q))) && (!typ || x.kind===typ)); if(!isNaN(nxt) && nxt>0){ list=list.filter(x=> (x.nextKm||0) <= nxt); } let i=1; list.forEach(x=>{ const tr=document.createElement('tr'); tr.innerHTML=`<td>${i++}</td><td>${x.code||''}</td><td>${x.type||''}</td><td>${x.date||''}</td><td>${x.odometer||''}</td><td>${x.cost||0}</td><td>${x.note||''}</td>`; b.appendChild(tr); }); } ['m_q','m_type','m_next'].forEach(id=> document.getElementById(id)?.addEventListener('input', renderMaint)); function maintNew(){ const code=prompt('كود المركبة؟'); if(!code) return; const type=prompt('نوع الصيانة؟ (oil/tires/brake/general)','oil'); const date=prompt('التاريخ (YYYY-MM-DD)?', new Date().toISOString().slice(0,10)); const odo=Number(prompt('قراءة العداد وقت الصيانة؟','0')||'0'); const cost=Number(prompt('التكلفة؟','0')||'0'); const note=prompt('ملاحظات؟','')||''; const nextKm = odo + (type==='oil'?5000: (type==='tires'?15000:10000)); maintLogs.unshift({code,type,date,odometer:odo,cost,note,nextKm}); saveLocal('maint_logs', maintLogs); renderMaint(); notify('تم تسجيل الصيانة','ok'); } function exportMaintCSV(){ const rows=[['code','type','date','odometer','cost','note','nextKm']]; maintLogs.forEach(x=> rows.push([x.code,x.type,x.date,x.odometer,x.cost,x.note,x.nextKm])); const csv=rows.map(r=>r.join(',')).join('\n'); const url=URL.createObjectURL(new Blob([csv],{type:'text/csv'})); const a=document.createElement('a'); a.href=url; a.download='maintenance_logs.csv'; a.click(); URL.revokeObjectURL(url); } function renderFuel(){ const t=document.getElementById('fuel_logsTbl'); if(!t) return; t.innerHTML='<thead><tr><th>#</th><th>المركبة</th><th>السائق</th><th>التاريخ</th><th>الكمية (لتر)</th><th>التكلفة</th><th>ملاحظة</th></tr></thead><tbody></tbody>'; const b=t.querySelector('tbody'); const q=(document.getElementById('fu_q')?.value||'').toLowerCase(); const from=document.getElementById('fu_from')?.value||''; const to=document.getElementById('fu_to')?.value||''; let list=fuelLogs.filter(x=> (!q || [x.vehicle,x.driver].some(s=> String(s||'').toLowerCase().includes(q)))); if(from) list=list.filter(x=> (x.date||'')>=from); if(to) list=list.filter(x=> (x.date||'')<=to); let i=1; list.forEach(x=>{ const tr=document.createElement('tr'); tr.innerHTML=`<td>${i++}</td><td>${x.vehicle||''}</td><td>${x.driver||''}</td><td>${x.date||''}</td><td>${x.liters||0}</td><td>${x.cost||0}</td><td>${x.note||''}</td>`; b.appendChild(tr); }); } ['fu_q','fu_from','fu_to'].forEach(id=> document.getElementById(id)?.addEventListener('input', renderFuel)); function fuelNew(){ const vehicle=prompt('كود/لوحة المركبة؟'); if(!vehicle) return; const driver=prompt('اسم السائق؟')||''; const date=prompt('التاريخ (YYYY-MM-DD)?', new Date().toISOString().slice(0,10)); const liters=Number(prompt('الكمية باللتر؟','0')||'0'); const cost=Number(prompt('التكلفة؟','0')||'0'); const note=prompt('ملاحظات؟','')||''; fuelLogs.unshift({vehicle,driver,date,liters,cost,note}); saveLocal('fuel_logs', fuelLogs); renderFuel(); notify('تم تسجيل تعبئة الوقود','ok'); } function exportFuelCSV(){ const rows=[['vehicle','driver','date','liters','cost','note']]; fuelLogs.forEach(x=> rows.push([x.vehicle,x.driver,x.date,x.liters,x.cost,x.note])); const csv=rows.map(r=>r.join(',')).join('\n'); const url=URL.createObjectURL(new Blob([csv],{type:'text/csv'})); const a=document.createElement('a'); a.href=url; a.download='fuel_logs.csv'; a.click(); URL.revokeObjectURL(url); } function renderAcc(){ const t=document.getElementById('accidentsTbl'); if(!t) return; t.innerHTML='<thead><tr><th>#</th><th>المركبة</th><th>السائق</th><th>التاريخ</th><th>الوصف</th><th>التكلفة التقديرية</th></tr></thead><tbody></tbody>'; const b=t.querySelector('tbody'); const q=(document.getElementById('ac_q')?.value||'').toLowerCase(); const from=document.getElementById('ac_from')?.value||''; const to=document.getElementById('ac_to')?.value||''; let list=accLogs.filter(x=> (!q || [x.vehicle,x.driver,x.desc].some(s=> String(s||'').toLowerCase().includes(q)))); if(from) list=list.filter(x=> (x.date||'')>=from); if(to) list=list.filter(x=> (x.date||'')<=to); let i=1; list.forEach(x=>{ const tr=document.createElement('tr'); tr.innerHTML=`<td>${i++}</td><td>${x.vehicle||''}</td><td>${x.driver||''}</td><td>${x.date||''}</td><td>${x.desc||''}</td><td>${x.cost||0}</td>`; b.appendChild(tr); }); } ['ac_q','ac_from','ac_to'].forEach(id=> document.getElementById(id)?.addEventListener('input', renderAcc)); function accidentNew(){ const vehicle=prompt('كود/لوحة المركبة؟'); if(!vehicle) return; const driver=prompt('اسم السائق؟')||''; const date=prompt('التاريخ (YYYY-MM-DD)?', new Date().toISOString().slice(0,10)); const desc=prompt('وصف الحادث؟')||''; const cost=Number(prompt('تكلفة تقديرية؟','0')||'0'); accLogs.unshift({vehicle,driver,date,desc,cost}); saveLocal('acc_logs', accLogs); renderAcc(); notify('تم تسجيل حادث','ok'); } function exportAccCSV(){ const rows=[['vehicle','driver','date','desc','cost']]; accLogs.forEach(x=> rows.push([x.vehicle,x.driver,x.date,x.desc,x.cost])); const csv=rows.map(r=>r.join(',')).join('\n'); const url=URL.createObjectURL(new Blob([csv],{type:'text/csv'})); const a=document.createElement('a'); a.href=url; a.download='accidents.csv'; a.click(); URL.revokeObjectURL(url); } function renderSchedule(){ const t=document.getElementById('maint_scheduleTbl'); if(!t) return; t.innerHTML='<thead><tr><th>#</th><th>المركبة</th><th>الصيانة القادمة عند</th><th>المتبقي (كم)</th></tr></thead><tbody></tbody>'; const b=t.querySelector('tbody'); let list=fleet.slice().sort((a,b)=> (a.maintenanceDueKm - a.odometer) - (b.maintenanceDueKm - b.odometer)); const from=document.getElementById('sc_from')?.value||''; const to=document.getElementById('sc_to')?.value||''; // placeholders for future date-based schedule let i=1; list.forEach(v=>{ const remaining = v.maintenanceDueKm - v.odometer; const tr=document.createElement('tr'); tr.innerHTML=`<td>${i++}</td><td>${v.code} / ${v.plate}</td><td>${v.maintenanceDueKm.toLocaleString('ar-KW')}</td><td>${remaining.toLocaleString('ar-KW')}</td>`; b.appendChild(tr); }); } function schedGenerate(){ renderSchedule(); notify('تم توليد جدول الصيانة','ok'); } const __sv = switchView; switchView = function(v){ __sv(v); if(v==='fleet') renderFleet(); if(v==='maint_logs') renderMaint(); if(v==='fuel_logs') renderFuel(); if(v==='accidents') renderAcc(); if(v==='maint_schedule') renderSchedule(); }; const PRICING_MODEL_KEY='pricing_model_v10'; function savePricingModel(){ const m=document.getElementById('pricing_model')?.value||'per_order'; localStorage.setItem(PRICING_MODEL_KEY,m); notify('تم حفظ نموذج التسعير: '+(m=='per_order'?'ثابت لكل طلب':m=='per_zone'?'حسب المنطقة':'مختلط'),'ok'); } (function restorePricing(){ const m=localStorage.getItem(PRICING_MODEL_KEY)||'per_order'; const sel=document.getElementById('pricing_model'); if(sel){ sel.value=m; } })(); function waEncode(s){ return encodeURIComponent(s||''); } function waLink(phone, text){ const msg = 'السلام عليكم، بخصوص الطلب: '+(text||''); const isMobile = /Android|iPhone|iPad|iPod/i.test(navigator.userAgent); if(isMobile){ return 'https://wa.me/'+(phone||'')+'?text='+waEncode(msg); } return 'https://web.whatsapp.com/send?phone='+(phone||'')+'&text='+waEncode(msg); } function phoneForOrder(o){ const base='9655'; const code = (o.id||0)%10000; return base + String(1000+code); } const _renderOrdersTbl = renderOrdersTbl; renderOrdersTbl = function(){ _renderOrdersTbl(); const t=document.getElementById('ordersTbl'); if(!t) return; const head=t.querySelector('thead tr'); if(head && head.children.length<8){ const th=document.createElement('th'); th.textContent='واتساب'; head.appendChild(th); } [...t.querySelectorAll('tbody tr')].forEach((tr,i)=>{ const ref = tr.children[1]?.textContent||''; const client = tr.children[2]?.textContent||''; const phone = phoneForOrder(orders[i]); const td=document.createElement('td'); const a=document.createElement('a'); a.textContent='تواصل'; a.href=waLink(phone, ref+' — '+client); a.target='_blank'; a.rel='noopener'; td.appendChild(a); tr.appendChild(td); }); }; const _renderCSTbl = renderCSTbl || function(){}; renderCSTbl = function(){ try{ _renderCSTbl(); }catch{} const t=document.getElementById('csTbl'); if(!t) return; const head=t.querySelector('thead tr'); if(head && head.children.length<8){ const th=document.createElement('th'); th.textContent='واتساب'; head.appendChild(th); } [...t.querySelectorAll('tbody tr')].forEach((tr,i)=>{ const ref = tr.children[1]?.textContent||''; const client = tr.children[2]?.textContent||''; const phone = phoneForOrder(orders[i]||{}); const td=document.createElement('td'); const a=document.createElement('a'); a.textContent='تواصل'; a.href=waLink(phone, ref+' — '+client); a.target='_blank'; a.rel='noopener'; td.appendChild(a); tr.appendChild(td); }); }; let FB = {app:null, db:null, connected:false}; const FB_CFG_KEY='fb_cfg_v10_beta'; function saveFirebaseConfig(){ try{ const raw = document.getElementById('fb_config').value.trim(); if(!raw){ notify('الصق إعدادات Firebase أولًا','warn'); return; } const cfg = JSON.parse(raw); localStorage.setItem(FB_CFG_KEY, JSON.stringify(cfg)); notify('تم حفظ إعدادات Firebase','ok'); }catch(e){ alert('صيغة JSON غير صحيحة'); } } (function restoreFB(){ const raw = localStorage.getItem(FB_CFG_KEY); if(raw){ document.getElementById('fb_config').value = raw; } })(); async function connectFirebase(){ try{ const raw = localStorage.getItem(FB_CFG_KEY); if(!raw){ notify('لا توجد إعدادات محفوظة','warn'); return; } const cfg = JSON.parse(raw); const { initializeApp } = await import('https://www.gstatic.com/firebasejs/10.12.5/firebase-app.js'); const { getFirestore, collection, getDocs, setDoc, getDoc, doc, addDoc } = await import('https://www.gstatic.com/firebasejs/10.12.5/firebase-firestore.js'); FB.app = initializeApp(cfg); FB.db = getFirestore(FB.app); FB.connected = true; document.getElementById('fb_status').textContent = 'الحالة: متصل'; notify('تم الاتصال بـ Firebase','ok'); window.fb = {collection, getDocs, setDoc, getDoc, doc, addDoc}; }catch(e){ console.error(e); FB.connected = false; document.getElementById('fb_status').textContent = 'الحالة: فشل الاتصال'; notify('فشل الاتصال بـ Firebase','err'); } } (function addSyncButtons(){ const dash = document.getElementById('v_dashboard')?.querySelector('.bd'); if(!dash) return; const bar = document.createElement('div'); bar.style='display:flex;gap:8px;flex-wrap:wrap;margin-bottom:8px'; const btnPull = document.createElement('button'); btnPull.className='btn'; btnPull.textContent='☁️ سحب بيانات من السحابة'; const btnPush = document.createElement('button'); btnPush.className='btn'; btnPush.textContent='☁️ رفع البيانات إلى السحابة'; bar.appendChild(btnPull); bar.appendChild(btnPush); dash.prepend(bar); btnPull.onclick = pullAll; btnPush.onclick = pushAll; })(); async function pullAll(){ if(!FB.connected){ notify('اتصل بـ Firebase أولًا','warn'); return; } try{ const collNames = ['orders','drivers','vehicles','invoices','maint_logs','fuel_logs','acc_logs','cashbox']; for(const name of collNames){ const snap = await fb.getDocs(fb.collection(FB.db, name)); const arr = []; snap.forEach(d=> arr.push({id:d.id, ...d.data()})); if(name==='orders') { orders = arr.length? arr : orders; } if(name==='drivers'){ drivers = arr.length? arr : drivers; } if(name==='vehicles'){ vehicles = arr.length? arr : vehicles; } if(name==='invoices'){ invoices = arr.length? arr : invoices; } if(name==='maint_logs'){ maintLogs = arr.length? arr : maintLogs; } if(name==='fuel_logs'){ fuelLogs = arr.length? arr : fuelLogs; } if(name==='acc_logs'){ accLogs = arr.length? arr : accLogs; } if(name==='cashbox'){ cashbox = arr.length? arr : cashbox; } } renderAll(); renderFleet?.(); renderMaint?.(); renderFuel?.(); renderAcc?.(); renderSchedule?.(); notify('تم سحب البيانات من السحابة','ok'); }catch(e){ console.error(e); notify('تعذر السحب من السحابة','err'); } } async function pushAll(){ if(!FB.connected){ notify('اتصل بـ Firebase أولًا','warn'); return; } try{ const { setDoc, doc, addDoc, collection } = window.fb; async function upsertColl(name, arr){ for(const row of arr){ const id = String(row.id || row.code || row.no || Date.now()+Math.random()); await setDoc(doc(FB.db, name, id), row); } } await upsertColl('orders', orders); await upsertColl('drivers', drivers); await upsertColl('vehicles', vehicles); await upsertColl('invoices', invoices); await upsertColl('maint_logs', maintLogs||[]); await upsertColl('fuel_logs', fuelLogs||[]); await upsertColl('acc_logs', accLogs||[]); await upsertColl('cashbox', cashbox||[]); notify('تم رفع البيانات إلى السحابة','ok'); }catch(e){ console.error(e); notify('تعذر الرفع إلى السحابة','err'); } } (function(){ const USERS=[ {u:'admin',p:'2468',role:'Admin'}, {u:'dispatcher',p:'1357',role:'Dispatcher'}, {u:'courier',p:'0000',role:'Courier'} ]; const btn=document.getElementById('lg_btn'); if(!btn) return; btn.onclick=function(){ const u=document.getElementById('lg_user')?.value?.trim()||''; const p=document.getElementById('lg_pass')?.value||''; const err=document.getElementById('lg_err'); if(err) err.style.display='none'; const hit=USERS.find(x=>x.u===u && x.p===p); if(!hit){ if(err){ err.style.display='block'; err.textContent='بيانات الدخول غير صحيحة.'; } return; } const theme=document.getElementById('lg_theme')?.value||'light'; const color=document.getElementById('lg_color')?.value||'indigo'; document.documentElement.setAttribute('data-mode', theme); document.documentElement.setAttribute('data-color', color); window.EXEC_USER={username:u, role:hit.role}; localStorage.setItem('exec_user', JSON.stringify(EXEC_USER)); document.getElementById('loginOverlay').style.display='none'; try{ notify('أهلًا '+u+' — تم تسجيل الدخول','ok'); }catch(e){} }; })(); (function(){ const params = new URLSearchParams(location.search); if(params.get('demo')==='1'){ window.EXEC_USER={username:'demo', role:'Admin'}; try{ localStorage.setItem('exec_user', JSON.stringify(EXEC_USER)); }catch{} const ov=document.getElementById('loginOverlay'); if(ov) ov.style.display='none'; } function normalizeDigits(s){ if(!s) return ''; const map = {'٠':'0','١':'1','٢':'2','٣':'3','٤':'4','٥':'5','٦':'6','٧':'7','٨':'8','٩':'9', '۰':'0','۱':'1','۲':'2','۳':'3','۴':'4','۵':'5','۶':'6','۷':'7','۸':'8','۹':'9'}; return String(s).replace(/[٠-٩۰-۹]/g, d=> map[d] || d); } const USERS=[ {u:'admin',p:'2468',role:'Admin'}, {u:'dispatcher',p:'1357',role:'Dispatcher'}, {u:'courier',p:'0000',role:'Courier'} ]; function doLogin(u,p){ const err=document.getElementById('lg_err'); const nu = (u||'').trim(); const np = normalizeDigits(p||''); const hit = USERS.find(x=> x.u===nu && x.p===np); if(!hit){ if(err){ err.style.display='block'; err.textContent='بيانات الدخول غير صحيحة.'; } return false; } const theme=document.getElementById('lg_theme')?.value||'light'; const color=document.getElementById('lg_color')?.value||'indigo'; document.documentElement.setAttribute('data-mode', theme); document.documentElement.setAttribute('data-color', color); window.EXEC_USER={username:nu, role:hit.role}; try{ localStorage.setItem('exec_user', JSON.stringify(EXEC_USER)); }catch{} const ov=document.getElementById('loginOverlay'); if(ov) ov.style.display='none'; try{ notify('مرحبًا '+nu+' — تم تسجيل الدخول','ok'); }catch{} return true; } const btn=document.getElementById('lg_btn'); if(btn){ btn.addEventListener('click', function(){ try{ document.getElementById('lg_err').style.display='none'; }catch{} const u=document.getElementById('lg_user')?.value; const p=document.getElementById('lg_pass')?.value; doLogin(u,p); }); } const demo=document.getElementById('lg_demo'); if(demo){ demo.addEventListener('click', function(){ doLogin('admin','2468'); }); } ['lg_user','lg_pass'].forEach(id=>{ const el=document.getElementById(id); if(el){ el.addEventListener('keydown', e=>{ if(e.key==='Enter'){ doLogin(document.getElementById('lg_user').value, document.getElementById('lg_pass').value); } }); } }); })(); window.EXEC_USER = {username:'demo', role:'Admin'}; try { localStorage.setItem('exec_user', JSON.stringify(EXEC_USER)); } catch(e) {} (function(){ try{ const saved = localStorage.getItem('exec_user'); if(saved){ const ov=document.getElementById('loginOverlay'); if(ov) ov.style.display='none'; } }catch{} function normalizeDigits(s){ if(!s) return ''; const map = {'٠':'0','١':'1','٢':'2','٣':'3','٤':'4','٥':'5','٦':'6','٧':'7','٨':'8','٩':'9', '۰':'0','۱':'1','۲':'2','۳':'3','۴':'4','۵':'5','۶':'6','۷':'7','۸':'8','۹':'9'}; return String(s).replace(/[٠-٩۰-۹]/g, d=> map[d] || d); } const USERS=[ {u:'admin',p:'2468',role:'Admin'}, {u:'dispatcher',p:'1357',role:'Dispatcher'}, {u:'courier',p:'0000',role:'Courier'} ]; function doLogin(u,p){ const err=document.getElementById('lg_err'); const nu=(u||'').trim(); const np=normalizeDigits(p||''); const hit=USERS.find(x=>x.u===nu && x.p===np); if(!hit){ if(err){ err.style.display='block'; err.textContent='بيانات الدخول غير صحيحة.'; } return false; } window.EXEC_USER={username:nu, role:hit.role}; try{ localStorage.setItem('exec_user', JSON.stringify(EXEC_USER)); }catch{} const ov=document.getElementById('loginOverlay'); if(ov) ov.style.display='none'; try{ notify('مرحبًا '+nu+' — تم تسجيل الدخول','ok'); }catch{} return true; } const btn=document.getElementById('lg_btn'); if(btn){ btn.addEventListener('click', function(){ try{ document.getElementById('lg_err').style.display='none'; }catch{} const u=document.getElementById('lg_user')?.value; const p=document.getElementById('lg_pass')?.value; doLogin(u,p); }); } ['lg_user','lg_pass'].forEach(id=>{ const el=document.getElementById(id); if(el){ el.addEventListener('keydown', e=>{ if(e.key==='Enter'){ doLogin(document.getElementById('lg_user').value, document.getElementById('lg_pass').value); } }); } }); })();